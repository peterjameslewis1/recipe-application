{"version":3,"sources":["Components/Home/img/vegetarian.jpg","Components/Home/img/spicy.jpg","Components/Home/img/meaty.jpg","Components/Home/img/dessert.jpg","Components/RecipieCard/RecipieCard.js","Components/RecipeCardDetails/RecipeCardDetails.js","Components/Home/HomePanel.js","Components/Home/Home.js","Components/SignUp/SignUp.js","Components/autoComplete/autoComplete.js","Components/autoComplete/useDebounce.js","Components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","match","useState","recipeData","setRecipeData","perPage","setPerPage","recipeType","params","type","history","useHistory","useEffect","fetchMoreData","query","fetch","then","res","json","data","hits","console","log","className","onClick","goBack","map","index","to","pathname","recipe","uri","back","key","src","image","alt","label","totalTime","length","href","RecipeCardDetails","setRecipe","hash","location","split","pathName","fetchData","catch","err","yield","url","ingredients","text","style","marginLeft","parseInt","weight","healthLabels","ifData","dietLabels","cautions","HomePanel","props","title","img","Home","ImgVegetarian","ImgSpicy","ImgMeat","ImgDessert","SignUp","email","setEmail","password","setPassword","setErr","value","onChange","e","target","placeholder","setTimeout","preventDefault","AutoComplete","searchTerm","setSearchTerm","results","setResults","isSearching","setIsSearching","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","useDebounce","search","method","r","filteredResults","result","Header","clicked","state","App","showSearch","setShowSearch","path","exact","component","RecipeCard","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,uMC2E5BC,EAxEF,SAACC,GAAW,IAAD,EACgBC,mBAAS,IADzB,mBACbC,EADa,KACDC,EADC,OAEUF,mBAAS,IAFnB,mBAEbG,EAFa,KAEJC,EAFI,KAGdC,EAAaN,EAAMA,MAAMO,OAAOC,KAClCC,EAAUC,cAGdC,qBAAU,WACNC,EAAcN,KACf,CAACA,IAGJ,IAAMM,EAAgB,SAACC,GAInBC,MAAM,uEAAD,OAAwED,EAAxE,oBAHU,mCAGV,mBAFS,WAET,sBAA6HT,IAC7HW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIf,EAAc,GAAD,mBAAKD,GAAL,YAAoBgB,EAAKC,WACxDC,QAAQC,IAAInB,IAUhB,OACI,yBAAKoB,UAAU,WACX,yBAAKC,QAAS,kBAAMd,EAAQe,UAAUF,UAAU,YAC5C,6BAAK,uBAAGA,UAAU,wBAAlB,SAEHpB,EAAWuB,KAAI,SAACP,EAAMQ,GACnB,OACI,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,IAAD,OAAMV,EAAKW,OAAOC,KAC1BjB,MAAO,CAAEkB,KAAMzB,IAEnBgB,UAAU,mBACVU,IAAKN,GAEL,yBAAKJ,UAAU,WACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,0BAEX,yBAAKA,UAAU,+BACX,yBAAKW,IAAKf,EAAKW,OAAOK,MAAQhB,EAAKW,OAAOK,MAAQ,yFAA0FC,IAAI,MAGpJ,yBAAKb,UAAU,gCACX,yBAAKA,UAAU,sCACX,4BAAKJ,EAAKW,OAAOO,QAErB,yBAAKd,UAAU,qCACX,8BAAOJ,EAAKW,OAAOQ,UAAnB,cAUhC,uBAAGd,QA5CM,WACblB,EAAWH,EAAWoC,OAAS,IAC/B1B,KA0C0BU,UAAU,YAAYiB,KAAK,KAAjD,eCwBGC,EA3FW,SAACxC,GAAW,IAAD,EACLC,mBAAS,IADJ,mBAC1B4B,EAD0B,KAClBY,EADkB,KAG3BC,EADM1C,EAAM2C,SAASf,SAASgB,MAAM,KAAK,GAE3CnC,EAAUC,cAERmC,EAAQ,kGAA8FH,GAE5G/B,qBAAU,WACNmC,EAAUD,KACX,CAACA,IAIJ,IAAMC,EAAY,SAACD,GAIf/B,MAAM,uCAAD,OAAwC+B,EAAxC,oBAHU,mCAGV,mBAFS,aAGT9B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIuB,EAAUvB,MACvB6B,OAAM,SAAAC,GAAG,OAAI5B,QAAQC,IAAR,UAAe2B,QAerC,OACI,6BACI,yBAAKzB,QAAS,kBAAMd,EAAQe,UAAUF,UAAU,YAC5C,6BAAK,uBAAGA,UAAU,wBAAlB,SAEHO,EAAOJ,KAAI,SAACP,EAAMQ,GACf,OACI,yBAAKM,IAAKN,EAAOJ,UAAU,eACvB,yBAAKA,UAAU,yBAEX,yBAAKA,UAAU,gCACX,4BAAKJ,EAAKkB,OACV,2BAAG,yCAAH,KAA4BlB,EAAK+B,QAErC,yBAAK3B,UAAU,8BACX,yBAAKW,IAAKf,EAAKgB,MAAOC,IAAI,KAC1B,uBAAGI,KAAMrB,EAAKgC,KAAd,qBAGJ,yBAAK5B,UAAU,sCACX,4CACA,4BACKJ,EAAKiC,YAAY1B,KAAI,SAACP,EAAMQ,GACzB,OAAO,wBAAIM,IAAKN,GAAO,8BAAOR,EAAKkC,MAA5B,IAAyC,0BAAMC,MAAO,CAAEC,WAAY,QAAUC,SAASrC,EAAKsC,QAAnD,WAM5D,yBAAKlC,UAAU,+BACX,0DACA,4BACKJ,EAAKuC,aAAahC,KAAI,SAACP,EAAMQ,GAC1B,OAAO,wBAAIM,IAAKN,GAAQR,OA5C7C,SAACA,GACQ,IAAhBA,EAAKoB,QAGLpB,EAAKO,KAAI,SAACP,EAAMQ,GACZ,OAAO,4BAAI,wBAAIM,IAAKN,GAAQR,OA2CXwC,CAAOxC,EAAKyC,YAEb,wCACA,4BACKzC,EAAK0C,SAASnC,KAAI,SAACP,EAAMQ,GACtB,OAAO,wBAAIM,IAAKN,GAAQR,eC/CjD2C,EA9BG,SAACC,GAEf,OACI,yBAAKxC,UAAU,WACX,kBAAC,IAAD,CAAMK,GAAE,2BAAsBmC,EAAMC,QAChC,yBAAKzC,UAAU,yBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,0BAEX,yBAAKA,UAAU,+BACX,yBAAKa,IAAI,GAAGF,IAAK6B,EAAME,OAK3B,yBAAK1C,UAAU,gCACX,yBAAKA,UAAU,sCACX,4BAAKwC,EAAMC,MAAX,oB,oECKrBE,EAjBF,WACT,IAAIxD,EAAUC,cACd,OACI,yBAAKY,UAAU,eACX,yBAAKC,QAAS,kBAAMd,EAAQe,UAAUF,UAAU,YAC5C,6BAAK,uBAAGA,UAAU,wBAAlB,SAEJ,kBAAC,EAAD,CAAO0C,IAAKE,IAAeH,MAAM,eACjC,kBAAC,EAAD,CAAOC,IAAKG,IAAUJ,MAAM,UAC5B,kBAAC,EAAD,CAAOC,IAAKI,IAASL,MAAM,UAC3B,kBAAC,EAAD,CAAOC,IAAKK,IAAYN,MAAM,cCmC3BO,EAnDA,WAAO,IAAD,EACSrE,mBAAS,IADlB,mBACVsE,EADU,KACHC,EADG,OAEevE,mBAAS,IAFxB,mBAEVwE,EAFU,KAEAC,EAFA,OAGKzE,mBAAS,IAHd,mBAGV+C,EAHU,KAGL2B,EAHK,KA+BjB,OACI,yBAAKrD,UAAU,kBACX,yBAAKA,UAAU,WACX,yCACA,yBAAKA,UAAU,eACX,uCACA,8BACI,2BAAOd,KAAK,QAAQc,UAAU,QAAQsD,MAAOL,EAAOM,SAhCpD,SAAAC,GAChBN,EAASM,EAAEC,OAAOH,QA+ByEI,YAAY,UACvF,2BAAOxE,KAAK,WAAWc,UAAU,WAAWsD,MAAOH,EAAUI,SA9B7D,SAAAC,GAChBJ,EAAYI,EAAEC,OAAOH,QA6B+EI,YAAY,aAChG,uBAAG1D,UAAU,OAAO0B,GACpB,uBAAGT,KAAK,IAAIjB,UAAU,MAAMC,QA5B5B,SAAAuD,GAEZP,EAAMjC,OAAS,GAAKmC,EAASnC,OAAS,EACtC2C,YAAW,WACPN,EAAO,sBACR,KAGHA,EAAO,qCAEXG,EAAEI,mBAkBc,UACA,kBAAC,IAAD,CAAMvD,GAAG,mBAAmBL,UAAmB,qBAAR0B,EAA6B,MAAQ,YAA5E,YACA,kBAAC,IAAD,CAAMrB,GAAG,mBAAmBL,UAAU,QAAO,yCCkCtD6D,MA1EM,SAAArB,GAAS,MAGQ7D,mBAAS,IAHjB,mBAGrBmF,EAHqB,KAGTC,EAHS,OAKEpF,mBAAS,IALX,mBAKrBqF,EALqB,KAKZC,EALY,OAOUtF,oBAAS,GAPnB,mBAOrBuF,EAPqB,KAORC,EAPQ,KAWtBC,ECfO,SAAqBd,EAAOe,GAAO,MAEJ1F,mBAAS2E,GAFL,mBAEzCgB,EAFyC,KAEzBC,EAFyB,KAqBhD,OAjBAlF,qBACE,WAEE,IAAMmF,EAAUb,YAAW,WACzBY,EAAkBjB,KACjBe,GAKH,OAAO,WACLI,aAAaD,MAGjB,CAAClB,EAAOe,IAGHC,EDNqBI,CAAYZ,EAAY,KAsBpD,OApBAzE,qBAAU,WAmDZ,IAA0BsF,EAlDlBP,GACFD,GAAe,IAiDKQ,EAhDHP,EAkDd5E,MAAM,yCAAD,OADG,mCACH,8BAC2DmF,EAD3D,UAEV,CACEC,OAAQ,QAEVnF,MAAK,SAAAoF,GAAC,OAAIA,EAAElF,WAvD4BF,MAAK,SAAAuE,GACzClE,QAAQC,IAAIiE,EAAQnE,MACpBsE,GAAe,GAEf,IAAMW,EAAkBd,EAAQnE,KAAKM,KAAI,SAAA6D,GACvC,OAAOA,EAAQzD,UAEjB0D,EAAWa,OAGbb,EAAW,MAGb,CAACG,IAKD,6BACE,6BACE,2BACEV,YAAY,mBACZH,SAAU,SAAAC,GAAC,OAAIO,EAAcP,EAAEC,OAAOH,WAIzCY,GAAe,8CAChB,yBAAKlE,UAAU,QACZgE,EAAQ7D,KAAI,SAAA4E,GAAM,OACjB,kBAAC,IAAD,CACE1E,GAAI,CACFC,SAAS,IAAD,OAAMyE,EAAOvE,KACrBjB,MAAO,CAAEkB,KAAMqD,IAEjB9D,UAAU,oBACV,yBAAKA,UAAU,QACb,yBAAKW,IAAKoE,EAAOnE,MAAOC,IAAI,KAC5B,4BAAKkE,EAAOjE,eEjCXkE,EAtBA,SAACxC,GAGZ,OACI,yBAAKxC,UAAU,UACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,kCACX,4BAAI,kBAAC,IAAD,CAAMK,GAAG,eAAT,cACJ,yBAAKJ,QAASuC,EAAMyC,QAASjF,UAAU,UAAS,uBAAGA,UAAU,qBAIrE,yBAAKA,UAAWwC,EAAM0C,MAAQ,SAAW,+BACrC,kBAAC,EAAD,UCgBLC,EAtBH,WAAO,IAAD,EACoBxG,oBAAS,GAD7B,mBACTyG,EADS,KACGC,EADH,KAOhB,OACE,kBAAC,IAAD,KACE,yBAAKrF,UAAU,OACb,kBAAC,EAAD,CAAQiF,QAPI,WAChBI,GAAeD,IAMiBF,MAAOE,IACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,cAAcC,OAAK,EAACC,UAAWxC,IAC3C,kBAAC,IAAD,CAAOsC,KAAK,mBAAmBC,OAAK,EAACC,UAAW7C,IAChD,kBAAC,IAAD,CAAO2C,KAAK,yBAAyBC,OAAK,EAACC,UAAWC,IACtD,kBAAC,IAAD,CAAOH,KAAK,UAAUE,UAAWtE,QCfvBwE,QACW,cAA7BC,OAAOtE,SAASuE,UAEe,UAA7BD,OAAOtE,SAASuE,UAEhBD,OAAOtE,SAASuE,SAASlH,MACvB,2DCXNmH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3G,MAAK,SAAA4G,GACJA,EAAaC,gBAEd7E,OAAM,SAAA8E,GACLzG,QAAQyG,MAAMA,EAAMC,c","file":"static/js/main.febfe39c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vegetarian.315bd06b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spicy.25a316cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meaty.a7386203.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dessert.8f350574.jpg\";","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Card = (match) => {\n    const [recipeData, setRecipeData] = useState([]);\n    const [perPage, setPerPage] = useState(10);\n    const recipeType = match.match.params.type;\n    let history = useHistory();\n\n\n    useEffect(() => {\n        fetchMoreData(recipeType)\n    }, [recipeType])\n\n    // Initial fetch call\n    const fetchMoreData = (query) => {\n        const apiKey = 'bd44e3839f3e7ae8efc4d7ec57ca1e03';\n        const appId = '0e146f59';\n\n        fetch(`https://cors-anywhere.herokuapp.com/https://api.edamam.com/search?q=${query}&app_key=${apiKey}&app_id=${appId}&from=0&to=${perPage}`)\n            .then(res => res.json())\n            .then(data => setRecipeData([...recipeData, ...data.hits]));\n        console.log(recipeData)\n    };\n\n    // function to fetch +10 more items of data on from API on onClick\n    const loadMore = () => {\n        setPerPage(recipeData.length + 10)\n        fetchMoreData()\n    }\n\n\n    return (\n        <div className=\"results\">\n            <div onClick={() => history.goBack()} className=\"back-btn\">\n                <div><i className=\"fas fa-chevron-left\"></i>Back</div>\n            </div>\n            {recipeData.map((data, index) => {\n                return (\n                    <Link\n                        to={{\n                            pathname: `/${data.recipe.uri}`,\n                            query: { back: recipeType }\n                        }}\n                        className=\"recipe-card-link\"\n                        key={index}>\n\n                        <div className=\"recipes\">\n                            <div className=\"recipie-card\">\n                                <div className=\"recipie-card-container\">\n\n                                    <div className=\"recipie-card-container__img\">\n                                        <img src={data.recipe.image ? data.recipe.image : 'https://assets.materialup.com/uploads/b03b23aa-aa69-4657-aa5e-fa5fef2c76e8/preview.png'} alt=\"\" />\n                                    </div>\n\n                                    <div className=\"recipie-card-container__text\">\n                                        <div className=\"recipie-card-container__text-title\">\n                                            <h4>{data.recipe.label}</h4>\n                                        </div>\n                                        <div className=\"recipie-card-container__text-time\">\n                                            <span>{data.recipe.totalTime}m</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Link>\n                )\n            })\n            }\n            <a onClick={loadMore} className=\"load-more\" href=\"#\">Load More</a>\n        </div>\n    )\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst RecipeCardDetails = (match) => {\n    const [recipe, setRecipe] = useState([]);\n    const uri = match.location.pathname.split('#')[1];\n    const hash = uri;\n    let history = useHistory();\n\n    const pathName = `https://api.edamam.com/search?r=http%3A%2F%2Fwww.edamam.com%2Fontologies%2Fedamam.owl%23${hash}`\n\n    useEffect(() => {\n        fetchData(pathName)\n    }, [pathName])\n\n\n\n    const fetchData = (pathName) => {\n        const apiKey = 'bd44e3839f3e7ae8efc4d7ec57ca1e03';\n        const appId = '0e146f59';\n\n        fetch(`https://cors-anywhere.herokuapp.com/${pathName}&app_key=${apiKey}&app_id=${appId}`)\n            .then(res => res.json())\n            .then(data => setRecipe(data))\n            .catch(err => console.log(`${err}`))\n    };\n\n\n    const ifData = (data) => {\n        if (data.length === 0) {\n            return;\n        } else {\n            data.map((data, index) => {\n                return <ul><li key={index}>{data}</li></ul>\n            })\n        }\n    }\n\n\n    return (\n        <div>\n            <div onClick={() => history.goBack()} className=\"back-btn\">\n                <div><i className=\"fas fa-chevron-left\"></i>Back</div>\n            </div>\n            {recipe.map((data, index) => {\n                return (\n                    <div key={index} className=\"recipe-card\">\n                        <div className=\"recipe-card-container\">\n\n                            <div className=\"recipe-card-container__title\">\n                                <h2>{data.label}</h2>\n                                <p><strong>Feeds</strong>: {data.yield}</p>\n                            </div>\n                            <div className=\"recipe-card-container__img\">\n                                <img src={data.image} alt=\"\" />\n                                <a href={data.url}>View full recipe</a>\n                            </div>\n\n                            <div className=\"recipe-card-container__ingredients\">\n                                <h3>Ingredients:</h3>\n                                <ul>\n                                    {data.ingredients.map((data, index) => {\n                                        return <li key={index}><span>{data.text}</span>:<span style={{ marginLeft: '5px' }}>{parseInt(data.weight)}g</span></li>\n                                    })}\n                                </ul>\n                            </div>\n\n\n                            <div className=\"recipe-card-container__info\">\n                                <h3>Recipe health information:</h3>\n                                <ul>\n                                    {data.healthLabels.map((data, index) => {\n                                        return <li key={index}>{data}</li>\n                                    })}\n                                </ul>\n\n                                {ifData(data.dietLabels)}\n\n                                <h3>Cautions</h3>\n                                <ul>\n                                    {data.cautions.map((data, index) => {\n                                        return <li key={index}>{data}</li>\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\n\nexport default RecipeCardDetails;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\n\nconst HomePanel = (props) => {\n\n    return (\n        <div className=\"results\">\n            <Link to={`/recipe-app/home/${props.title}`}>\n                <div className=\"recipes panel-recipes\">\n                    <div className=\"recipie-card\">\n                        <div className=\"recipie-card-container\">\n\n                            <div className=\"recipie-card-container__img\">\n                                <img alt=\"\" src={props.img} />\n                            </div>\n\n\n\n                            <div className=\"recipie-card-container__text\">\n                                <div className=\"recipie-card-container__text-title\">\n                                    <h2>{props.title} recipes</h2>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        </div>\n    )\n}\n\n\n\nexport default HomePanel;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport Panel from './HomePanel';\nimport ImgVegetarian from './img/vegetarian.jpg';\nimport ImgSpicy from './img/spicy.jpg';\nimport ImgMeat from './img/meaty.jpg';\nimport ImgDessert from './img/dessert.jpg';\n\n\nconst Home = () => {\n    let history = useHistory();\n    return (\n        <div className=\"home-panels\">\n            <div onClick={() => history.goBack()} className=\"back-btn\">\n                <div><i className=\"fas fa-chevron-left\"></i>Back</div>\n            </div>\n            <Panel img={ImgVegetarian} title=\"Vegetarian\" />\n            <Panel img={ImgSpicy} title=\"Spicy\" />\n            <Panel img={ImgMeat} title=\"Meaty\" />\n            <Panel img={ImgDessert} title=\"Dessert\" />\n        </div>\n    )\n}\n\n\n\nexport default Home;\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SignUp = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [err, setErr] = useState('');\n\n\n    const userHandler = e => {\n        setEmail(e.target.value)\n    }\n    const passHandler = e => {\n        setPassword(e.target.value)\n    }\n\n    const accCreation = e => {\n\n        if (email.length > 7 && password.length > 7) {\n            setTimeout(() => {\n                setErr('Account Created!')\n            }, 2000);\n        }\n        else {\n            setErr(\"Greater than 7 characters please!\")\n        }\n        e.preventDefault();\n    }\n\n\n\n\n\n\n    return (\n        <div className=\"background-img\">\n            <div className=\"sign-up\">\n                <h1>Recipeasy</h1>\n                <div className=\"sign-up-box\">\n                    <h2>Sign up</h2>\n                    <form>\n                        <input type=\"email\" className=\"email\" value={email} onChange={userHandler} placeholder=\"Email\" />\n                        <input type=\"password\" className=\"password\" value={password} onChange={passHandler} placeholder=\"Password\" />\n                        <p className=\"err\">{err}</p>\n                        <a href=\"#\" className=\"btn\" onClick={accCreation}>Create</a>\n                        <Link to=\"/recipe-app/home\" className={err === 'Account Created!' ? 'btn' : 'continue'}>Continue</Link>\n                        <Link to=\"/recipe-app/home\" className=\"skip\"><p>Skip</p></Link>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useDebounce from './useDebounce';\n\n\n\nconst AutoComplete = props => {\n  // State and setters for ...\n  // Search term\n  const [searchTerm, setSearchTerm] = useState('');\n  // API search results\n  const [results, setResults] = useState([]);\n  // Searching status (whether there is pending API request)\n  const [isSearching, setIsSearching] = useState(false);\n  // Debounce search term so that it only gives us latest value ...\n  // ... if searchTerm has not been updated within last 500ms\n  // As a result the API call should only fire once user stops typing\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      setIsSearching(true);\n      searchCharacters(debouncedSearchTerm).then(results => {\n        console.log(results.hits)\n        setIsSearching(false);\n        // Filter out results with no thumbnail\n        const filteredResults = results.hits.map(results => {\n          return results.recipe;\n        })\n        setResults(filteredResults);\n      });\n    } else {\n      setResults([]);\n    }\n  },\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\n  );\n\n\n  return (\n    <div>\n      <div>\n        <input\n          placeholder=\"Search recipe...\"\n          onChange={e => setSearchTerm(e.target.value)}\n        />\n      </div>\n\n      {isSearching && <div>Searching ...</div>}\n      <div className=\"list\">\n        {results.map(result => (\n          <Link\n            to={{\n              pathname: `/${result.uri}`,\n              query: { back: searchTerm }\n            }}\n            className=\"recipe-card-link\">\n            <div className=\"item\">\n              <img src={result.image} alt=\"\" />\n              <h4>{result.label}</h4>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n\n}\n\n\nfunction searchCharacters(search) {\n  const apiKey = '8125493d295351d3f30b5b702bf96147';\n  return fetch(\n    `https://api.edamam.com/search?app_key=${apiKey}&app_id=26adc8da&q=${search}&to=30`,\n    {\n      method: 'GET'\n    }\n  ).then(r => r.json());\n}\n\nexport default AutoComplete;","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","import React from 'react';\nimport AutoComplete from '../autoComplete/autoComplete';\nimport { Link } from 'react-router-dom'\n\nconst Header = (props) => {\n\n\n    return (\n        <div className=\"header\">\n            <div className=\"header-container container\">\n                <div className=\"header-container-main\">\n                    <div className=\"header-container-main-location\">\n                        <h3><Link to=\"/recipe-app\">Recipeasy</Link></h3>\n                        <div onClick={props.clicked} className=\"search\"><i className=\"fas fa-search\"></i></div>\n                    </div>\n                </div>\n\n                <div className={props.state ? 'active' : \"header-container-main-input\"}>\n                    <AutoComplete />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Header;\n","import React, { useState } from 'react';\nimport './App.css';\nimport RecipeCard from './Components/RecipieCard/RecipieCard';\nimport RecipeCardDetails from './Components/RecipeCardDetails/RecipeCardDetails';\nimport Home from './Components/Home/Home';\nimport SignUp from './Components/SignUp/SignUp';\nimport Header from './Components/Header/Header';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\n\nconst App = () => {\n  const [showSearch, setShowSearch] = useState(false);\n\n  const showInput = () => {\n    setShowSearch(!showSearch);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header clicked={showInput} state={showSearch} />\n        <Switch>\n          <Route path=\"/recipe-app\" exact component={SignUp} />\n          <Route path=\"/recipe-app/home\" exact component={Home} />\n          <Route path=\"/recipe-app/home/:type\" exact component={RecipeCard} />\n          <Route path=\"/:index\" component={RecipeCardDetails} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}